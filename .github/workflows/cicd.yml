name: "CI/CD"
on:
  pull_request:
  push:
    branches:
      - main
env:
  ENABLE_PNPM_CACHE: "false"
jobs:
  UnitTest:
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Unit Tests
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/unit_test.sh
  IntegrationTest:
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials for Gattai
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Integration Tests
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/integration_test.sh
  Build:
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Unit Tests
        continue-on-error: true
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/build.sh
  Pre-commit:
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules directory
        uses: actions/cache@v3
        if: env.ENABLE_PNPM_CACHE == 'true'
        with:
          path: |
            **/node_modules
          key: test-${{ runner.os }}-${{ runner.arch }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            test-${{ runner.os }}-${{ runner.arch }}-pnpm

      - name: Integrations Tests
        continue-on-error: true
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/pre-commit.sh

  # Only on main branch
  Release:
    needs:
      - UnitTest
      - IntegrationTest
      - Build
      - Pre-commit
    name: Release
    if: github.ref == 'refs/heads/main'
    runs-on:
      - nix
      - ARM64
    steps:
      - name: Gotrade CI Environment
        uses: kirinnee/atomici-action@v2.3.1

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN_SEMANTIC_RELEASE }}

      - name: Remove GitHooks
        run: rm ./.git/hooks/* || true

      - name: Build Packages
        env:
          NIXPKGS_ALLOW_UNFREE: "1"
        run: nix-shell nix/shells.nix -A ci --run scripts/ci/build.sh

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_SEMANTIC_RELEASE }}
        run: nix-shell nix/shells.nix -A cd --run scripts/ci/release.sh
