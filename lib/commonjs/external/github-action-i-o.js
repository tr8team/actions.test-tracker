import { getInput, setOutput } from "@actions/core";
import { parseJSON } from "../lib/util.js";
import { Ok } from "../lib/core/result.js";
class GithubActionIO {
    get(key) {
        return getInput(key);
    }
    getObject(key, validator) {
        const raw = this.get(key);
        return parseJSON(raw).andThen((j) => validator.asResult({
            none: () => Ok(j),
            some: (v) => v.parse(j),
        }));
    }
    set(key, value) {
        setOutput(key, value);
    }
    setObject(key, value) {
        setOutput(key, JSON.stringify(value));
    }
}
export { GithubActionIO };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0aHViLWFjdGlvbi1pLW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXh0ZXJuYWwvZ2l0aHViLWFjdGlvbi1pLW8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTNDLE9BQU8sRUFBRSxFQUFFLEVBQVUsTUFBTSx1QkFBdUIsQ0FBQztBQUduRCxNQUFNLGNBQWM7SUFDbEIsR0FBRyxDQUFDLEdBQVc7UUFDYixPQUFPLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QixDQUFDO0lBRUQsU0FBUyxDQUFJLEdBQVcsRUFBRSxTQUErQjtRQUN2RCxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzFCLE9BQU8sU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQ2xDLFNBQVMsQ0FBQyxRQUFRLENBQUM7WUFDakIsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQXFCO1lBQ3JDLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDeEIsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsR0FBRyxDQUFDLEdBQVcsRUFBRSxLQUFhO1FBQzVCLFNBQVMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVELFNBQVMsQ0FBQyxHQUFXLEVBQUUsS0FBYTtRQUNsQyxTQUFTLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN4QyxDQUFDO0NBQ0Y7QUFFRCxPQUFPLEVBQUUsY0FBYyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb25JTyB9IGZyb20gXCIuLi9saWIvaW50ZXJmYWNlL2lvLmpzXCI7XG5pbXBvcnQgeyBnZXRJbnB1dCwgc2V0T3V0cHV0IH0gZnJvbSBcIkBhY3Rpb25zL2NvcmVcIjtcbmltcG9ydCB7IHBhcnNlSlNPTiB9IGZyb20gXCIuLi9saWIvdXRpbC5qc1wiO1xuaW1wb3J0IHsgVmFsaWRhdG9yIH0gZnJvbSBcIi4uL2xpYi9pbnRlcmZhY2UvdmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgeyBPaywgUmVzdWx0IH0gZnJvbSBcIi4uL2xpYi9jb3JlL3Jlc3VsdC5qc1wiO1xuaW1wb3J0IHsgT3B0aW9uIH0gZnJvbSBcIi4uL2xpYi9jb3JlL29wdGlvbi5qc1wiO1xuXG5jbGFzcyBHaXRodWJBY3Rpb25JTyBpbXBsZW1lbnRzIEFjdGlvbklPIHtcbiAgZ2V0KGtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gZ2V0SW5wdXQoa2V5KTtcbiAgfVxuXG4gIGdldE9iamVjdDxUPihrZXk6IHN0cmluZywgdmFsaWRhdG9yOiBPcHRpb248VmFsaWRhdG9yPFQ+Pik6IFJlc3VsdDxULCBFcnJvcj4ge1xuICAgIGNvbnN0IHJhdyA9IHRoaXMuZ2V0KGtleSk7XG4gICAgcmV0dXJuIHBhcnNlSlNPTihyYXcpLmFuZFRoZW4oKGopID0+XG4gICAgICB2YWxpZGF0b3IuYXNSZXN1bHQoe1xuICAgICAgICBub25lOiAoKSA9PiBPayhqKSBhcyBSZXN1bHQ8VCwgRXJyb3I+LFxuICAgICAgICBzb21lOiAodikgPT4gdi5wYXJzZShqKSxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHNldChrZXk6IHN0cmluZywgdmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgIHNldE91dHB1dChrZXksIHZhbHVlKTtcbiAgfVxuXG4gIHNldE9iamVjdChrZXk6IHN0cmluZywgdmFsdWU6IG9iamVjdCk6IHZvaWQge1xuICAgIHNldE91dHB1dChrZXksIEpTT04uc3RyaW5naWZ5KHZhbHVlKSk7XG4gIH1cbn1cblxuZXhwb3J0IHsgR2l0aHViQWN0aW9uSU8gfTtcbiJdfQ==