import { Err, Ok } from "./core/result.js";
import { None, Some } from "./core/option.js";
function toResult(du) {
    if (du.success) {
        return Ok(du.data);
    }
    return Err(du.error);
}
function parseJSON(raw) {
    try {
        const json = JSON.parse(raw);
        return Ok(json);
    }
    catch (e) {
        return Err(e);
    }
}
function catchToResult(e) {
    if (e instanceof Error) {
        return e;
    }
    else if (typeof e === "string") {
        return new Error(e);
    }
    return new Error(JSON.stringify(e));
}
function stringToOption(s) {
    if (s == null) {
        return None();
    }
    return s.length === 0 ? None() : Some(s);
}
export { toResult, parseJSON, catchToResult, stringToOption };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBVSxNQUFNLGtCQUFrQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQVUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFdEQsU0FBUyxRQUFRLENBQ2YsRUFBb0U7SUFFcEUsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFO1FBQ2QsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3BCO0lBQ0QsT0FBTyxHQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3ZCLENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FBSSxHQUFXO0lBQy9CLElBQUk7UUFDRixNQUFNLElBQUksR0FBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2pCO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixPQUFPLEdBQUcsQ0FBQyxDQUFVLENBQUMsQ0FBQztLQUN4QjtBQUNILENBQUM7QUFFRCxTQUFTLGFBQWEsQ0FBQyxDQUFVO0lBQy9CLElBQUksQ0FBQyxZQUFZLEtBQUssRUFBRTtRQUN0QixPQUFPLENBQUMsQ0FBQztLQUNWO1NBQU0sSUFBSSxPQUFPLENBQUMsS0FBSyxRQUFRLEVBQUU7UUFDaEMsT0FBTyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUNyQjtJQUNELE9BQU8sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RDLENBQUM7QUFFRCxTQUFTLGNBQWMsQ0FBQyxDQUE0QjtJQUNsRCxJQUFJLENBQUMsSUFBSSxJQUFJLEVBQUU7UUFDYixPQUFPLElBQUksRUFBRSxDQUFDO0tBQ2Y7SUFDRCxPQUFPLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNDLENBQUM7QUFFRCxPQUFPLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxhQUFhLEVBQUUsY0FBYyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBab2RFcnJvciB9IGZyb20gXCJ6b2RcIjtcbmltcG9ydCB7IEVyciwgT2ssIFJlc3VsdCB9IGZyb20gXCIuL2NvcmUvcmVzdWx0LmpzXCI7XG5pbXBvcnQgeyBOb25lLCBPcHRpb24sIFNvbWUgfSBmcm9tIFwiLi9jb3JlL29wdGlvbi5qc1wiO1xuXG5mdW5jdGlvbiB0b1Jlc3VsdDxUPihcbiAgZHU6IHsgc3VjY2VzczogdHJ1ZTsgZGF0YTogVCB9IHwgeyBzdWNjZXNzOiBmYWxzZTsgZXJyb3I6IFpvZEVycm9yIH1cbik6IFJlc3VsdDxULCBab2RFcnJvcj4ge1xuICBpZiAoZHUuc3VjY2Vzcykge1xuICAgIHJldHVybiBPayhkdS5kYXRhKTtcbiAgfVxuICByZXR1cm4gRXJyKGR1LmVycm9yKTtcbn1cblxuZnVuY3Rpb24gcGFyc2VKU09OPFQ+KHJhdzogc3RyaW5nKTogUmVzdWx0PFQsIEVycm9yPiB7XG4gIHRyeSB7XG4gICAgY29uc3QganNvbjogVCA9IEpTT04ucGFyc2UocmF3KTtcbiAgICByZXR1cm4gT2soanNvbik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gRXJyKGUgYXMgRXJyb3IpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNhdGNoVG9SZXN1bHQoZTogdW5rbm93bik6IEVycm9yIHtcbiAgaWYgKGUgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgIHJldHVybiBlO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBlID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcihlKTtcbiAgfVxuICByZXR1cm4gbmV3IEVycm9yKEpTT04uc3RyaW5naWZ5KGUpKTtcbn1cblxuZnVuY3Rpb24gc3RyaW5nVG9PcHRpb24oczogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCk6IE9wdGlvbjxzdHJpbmc+IHtcbiAgaWYgKHMgPT0gbnVsbCkge1xuICAgIHJldHVybiBOb25lKCk7XG4gIH1cbiAgcmV0dXJuIHMubGVuZ3RoID09PSAwID8gTm9uZSgpIDogU29tZShzKTtcbn1cblxuZXhwb3J0IHsgdG9SZXN1bHQsIHBhcnNlSlNPTiwgY2F0Y2hUb1Jlc3VsdCwgc3RyaW5nVG9PcHRpb24gfTtcbiJdfQ==